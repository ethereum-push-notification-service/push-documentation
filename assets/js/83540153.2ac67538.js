"use strict";(self.webpackChunkpush_doc_hub_v_2=self.webpackChunkpush_doc_hub_v_2||[]).push([[7718],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||r;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6952:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=n(7462),o=(n(7294),n(3905));const r={},i=void 0,c={unversionedId:"devs/chat/uiweb/ChatViewComponent",id:"devs/chat/uiweb/ChatViewComponent",title:"ChatViewComponent",description:"- ChatViewComponent",source:"@site/docs/devs/chat/uiweb/06-ChatViewComponent.mdx",sourceDirName:"devs/chat/uiweb",slug:"/devs/chat/uiweb/ChatViewComponent",permalink:"/devs/chat/uiweb/ChatViewComponent",draft:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-documentation/docs/devs/chat/uiweb/06-ChatViewComponent.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"pushChatSidebar",previous:{title:"ChatProfile",permalink:"/devs/chat/uiweb/ChatProfile"},next:{title:"Theme",permalink:"/devs/chat/uiweb/Theme"}},s={},l=[],u={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ChatViewComponent"),(0,o.kt)("h3",{parentName:"li",id:"want-to-add-the-entire-chat-component-in-your-website-but-dont-have-the-time-to-code-the-entire-message-body-ui--import-chatviewcomponent-pass-the-chatid-and-there-you-have-it-"},"want to add the entire chat component in your website but don\u2019t have the time to code the entire message body UI ? import ChatViewComponent, pass the chatId and there you have it !"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Inputs",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"  messageInput?: boolean; // default true\n  chatViewList?: boolean; // default true\n  chatProfile?: boolean; // default true\n  chatId: string;\n  limit?: number;\n  emoji?: boolean; // default true\n  gif?: boolean; // default true\n  file?: boolean;  // default true\n  isConnected?: boolean;  // default true\n  onClick?: (() => void()) // use this to pass a function when the user is not verified as per the rules of access control\n"))),(0,o.kt)("li",{parentName:"ul"},"Example",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{parentName:"p",src:"https://github.com/KlausMikhaelson/KlausMikhaelson/assets/100528412/385bbdb3-1536-4128-a773-ffae1d7ed1fe",alt:"Example Image"})),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"\nimport { ChatViewComponent } from '@pushprotocol/uiweb';\n\nconst ChatViewComponentTest = () => {\n// you can add the amount of msgs that you want to fetch when the user first sees the component\n// by default the message fetch limit is 10.\n// by default image, file and gif option is there,\n// if you don't want any of them then just pass it as false inside the component\n// for example below commented code won't have the option for file, gif and emoji:\n/// <ChatViewComponent chatId='89f7b382b9b1496dca2b9a94ef87c80dd102db05dcb40b165fabfab28770fd55' emoji={false} gif={false} file={false} limit={10}/>\n  return (\n    <div>\n      <ChatViewComponent chatId='89f7b382b9b1496dca2b9a94ef87c80dd102db05dcb40b165fabfab28770fd55' limit={10}/>\n    </div>\n  );\n};\n\nexport default ChatViewComponentTest;\n")))))))))}m.isMDXComponent=!0}}]);