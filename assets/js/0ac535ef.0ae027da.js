"use strict";(self.webpackChunkpush_doc_hub_v_2=self.webpackChunkpush_doc_hub_v_2||[]).push([[1148],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||i;return n?a.createElement(h,l(l({ref:t},d),{},{components:n})):a.createElement(h,l({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(7462),r=n(7294),i=n(6010),l=n(2466),o=n(6550),s=n(1980),u=n(7392),d=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function c(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=c(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,u]=h({queryString:n,groupId:a}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),k=(()=>{const e=s??p;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{k&&o(k)}),[k]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)}),[u,g,i]),tabValues:i}}var k=n(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function N(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),c=e=>{const t=e.currentTarget,n=d.indexOf(t),a=u[n].value;a!==o&&(p(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:c},l,{className:(0,i.Z)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":o===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=g(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",f.tabList)},r.createElement(N,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function v(e){const t=(0,k.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},1505:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),i=n(4866),l=n(5162);const o={id:"devs-chat-develop-initialize-user",title:"Initialize User",hide_title:!0,slug:"./initialize-user",displayed_sidebar:"pushChatSidebar",sidebar_position:2},s="Initialize user",u={unversionedId:"devs/chat/build/devs-chat-develop-initialize-user",id:"devs/chat/build/devs-chat-develop-initialize-user",title:"Initialize User",description:"Before you can start sending messages, or create conditional access group for your community, or send those chat requests to Vitalik.eth. you will need to initialize a user or re-authenticate the user. To do so you will use PushAPI.initialize call from @pushprotocol/restapi package.",source:"@site/docs/devs/chat/build/02-Develop-Initialize-User.mdx",sourceDirName:"devs/chat/build",slug:"/devs/chat/build/initialize-user",permalink:"/devs/chat/build/initialize-user",draft:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-documentation/docs/devs/chat/build/02-Develop-Initialize-User.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"devs-chat-develop-initialize-user",title:"Initialize User",hide_title:!0,slug:"./initialize-user",displayed_sidebar:"pushChatSidebar",sidebar_position:2},sidebar:"pushChatSidebar",previous:{title:"Get Started",permalink:"/devs/chat/build/get-started"},next:{title:"Fetch Chats",permalink:"/devs/chat/build/fetch-chats"}},d={},p=[{value:"Initialize user API",id:"initialize-user-api",level:2},{value:"Setting the right environment",id:"setting-the-right-environment",level:3},{value:"Initialize user parameters",id:"initialize-user-parameters",level:3},{value:"Initialize user interface",id:"initialize-user-interface",level:3},{value:"Using for Lens / Cyberconnect / Any NFTs",id:"using-for-lens--cyberconnect--any-nfts",level:2},{value:"Standard Wallet Address",id:"standard-wallet-address",level:3},{value:"Chain Agnostic Wallet Address",id:"chain-agnostic-wallet-address",level:3},{value:"Lens profile / Cyberconnect profile / NFT profile",id:"lens-profile--cyberconnect-profile--nft-profile",level:3}],c={toc:p},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"initialize-user"},"Initialize user"),(0,r.kt)("p",null,"Before you can start sending messages, or create conditional access group for your community, or send those chat requests to ",(0,r.kt)("inlineCode",{parentName:"p"},"Vitalik.eth"),". you will need to initialize a user or re-authenticate the user. To do so you will use ",(0,r.kt)("inlineCode",{parentName:"p"},"PushAPI.initialize")," call from ",(0,r.kt)("inlineCode",{parentName:"p"},"@pushprotocol/restapi")," package."),(0,r.kt)("head",null,(0,r.kt)("title",null,"Initialize User | Push Chat | Push Documentation")),(0,r.kt)("h2",{id:"initialize-user-api"},"Initialize user API"),(0,r.kt)(i.Z,{className:"codetabs",groupId:"code-examples",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"js",attributes:{className:"codetab js"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as PushAPI from '@pushprotocol/restapi';\n\n// PushAPI.initialize(signer, {options?});\n// signer - pass the signer from your app and set env to 'prod' for mainnet app\n// options? - optional, can pass initialization parameters for customization \nconst userAlice = await PushAPI.initialize(signer, {env: 'prod'}); \n")))),(0,r.kt)("p",null,"The function automatically initializes and returns the ",(0,r.kt)("strong",{parentName:"p"},"Push user profile")," object if one doesn't exist for the user or alternatively creates a new profile if the user has not been onboarded to Push network. This profile is used to interact with all function calls moving forward."),(0,r.kt)("h3",{id:"setting-the-right-environment"},"Setting the right environment"),(0,r.kt)("p",null,"Push Network operates on the following environments \u2014"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Production")," - You will need to set ",(0,r.kt)("inlineCode",{parentName:"li"},"env")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"options")," object to 'prod' to enable mainnet apps communication."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Staging")," - Set by default, can omit ",(0,r.kt)("inlineCode",{parentName:"li"},"options")," if testing your app on testnet.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"initialize-user-parameters"},"Initialize user parameters"),(0,r.kt)("p",null,"When initializing your user, you can customize the process using several parameters. Here's a breakdown:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Sub-Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"em"},"signer"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SignerType")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"EthersV5 or Viem Signer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PushAPIInitializeProps")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional configuration properties for initializing the PushAPI.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.env")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ENV")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"staging")),(0,r.kt)("td",{parentName:"tr",align:null},"API env - 'prod' or 'staging'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.progressHook")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(progress: ProgressHookType) => void")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"A callback function to receive progress updates during initialization.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.account")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"initialize-user#use-lens-profile--any-nfts--chain-agnostic-wallet-address"},"account")," to associate with the PushAPI. If not provided, it is derived from signer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.version")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ENC_TYPE_V3")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"/devs/chat/concepts/encryption-version-in-push-chat"},"encryption version")," to use for the PushAPI")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.versionMeta")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ NFTPGP_V1 ?: password: string }")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Metadata related to the encryption version, including a password if needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.autoUpgrade")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", upgrades encryption keys to latest encryption version")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.origin")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Specify origin or source while creating a Push Profile")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: Parameters ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"in this style"))," are mandatory.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Expected response"),"200 OK"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"initialize-user-interface"},"Initialize user interface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"\n/**\n * Initialization Parameters for PushAPI\n */\n\n/**\n * Specifies the type of signer.\n * Choose between EthersV5 or Viem Signer.\n */\ntype Signer = SignerType;\n\ninterface PushAPIInitializeProps {\n    /**\n     * Sets the API environment.\n     * Options: 'prod', 'staging', 'dev'\n     * Default: 'staging'\n     */\n    env?: ENV;\n    \n    /**\n     * A callback function to receive updates during the initialization process.\n     */\n    progressHook?: (progress: ProgressHookType) => void;\n\n    /**\n     * The account you want to link with the PushAPI.\n     * If left empty, it'll use the account associated with your signer.\n     */\n    account?: string;\n\n    /**\n     * Specifies the encryption version for the PushAPI.\n     * Default: 'ENC_TYPE_V3'\n     */\n    version?: string;\n\n    /**\n     * Provides additional data related to your chosen encryption version,\n     * like a necessary password.\n     */\n    versionMeta?: {\n        NFTPGP_V1?: {\n            password: string;\n        };\n    };\n\n    /**\n     * When set to true, the system will automatically upgrade encryption keys \n     * to the latest available encryption version.\n     * Default: true\n     */\n    autoUpgrade?: boolean;\n\n    /**\n     * Defines the origin or source when setting up a Push Profile.\n     */\n    origin?: string;\n}\n\n/**\n * Initializes the PushAPI with given parameters.\n * \n * @param signer The type of signer (EthersV5 or Viem Signer).\n * @param options Optional configurations for initializing the PushAPI.\n */\nfunction initializePushAPI(signer: Signer, options?: PushAPIInitializeProps) {\n    // Initialization logic here\n}\n\n")),(0,r.kt)("h2",{id:"using-for-lens--cyberconnect--any-nfts"},"Using for Lens / Cyberconnect / Any NFTs"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Intermediate section, can be skipped unless you are planning to message NFT, .lens, .polygon or different blockchains.")),(0,r.kt)("p",null,"Push Chat supports Lens, Cyberconnect, NFT wallets and any EVM or non-EVM wallets. Since address standards for all of these are different, we came up with a compatible standard that is chain agnostic to ensure cross-chain messaging or cross-nft messaging can become a reality. "),(0,r.kt)("p",null,"This lead us to introduce support for multiple wallet address formats and coining the word ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"account")),"  instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"address")," to be used in parameters wherever necessary. "),(0,r.kt)("h3",{id:"standard-wallet-address"},"Standard Wallet Address"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Standard Wallet Address")," - Standard wallet is supported and used by default"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"em"},"usage"))," - ",(0,r.kt)("inlineCode",{parentName:"li"},"0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666"))),(0,r.kt)("h3",{id:"chain-agnostic-wallet-address"},"Chain Agnostic Wallet Address"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Chain Agnostic Wallet Address")," - Pass ",(0,r.kt)("strong",{parentName:"li"},"{chain_standard}:{account_id}")," format to use this instead of standard wallet address. SDK converts all normal wallet address to chain agnostic ones by default."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"em"},"usage"))," - ",(0,r.kt)("inlineCode",{parentName:"li"},"eip155:0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"em"},"usage"))," - ",(0,r.kt)("inlineCode",{parentName:"li"},"cosmos:cosmos1t2uflqwqe0fsj0shcfkrvpukewcw40yjj6hdc0")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"em"},"usage"))," - ",(0,r.kt)("inlineCode",{parentName:"li"},"starknet:0x02dd1b492765c064eac4039e3841aa5f382773b598097a40073bd8b48170ab57"))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Blockchain Agnostic Wallet Address has been inspired by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md"},"CAIP-10 standard"),", which is a great step in marking wallet address blockchain agnostic. ")),(0,r.kt)("h3",{id:"lens-profile--cyberconnect-profile--nft-profile"},"Lens profile / Cyberconnect profile / NFT profile"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NFT profile")," - Pass ",(0,r.kt)("strong",{parentName:"li"},"nft:{chain_standard}:{nftChainId}:{nftContractAddress}:{nftTokenId}")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"em"},"usage"))," - ",(0,r.kt)("inlineCode",{parentName:"li"},"nft:eip155:5:0x42af3147f17239341477113484752D5D3dda997B:2:1683058528"))))}h.isMDXComponent=!0}}]);