"use strict";(self.webpackChunkpush_doc_hub_v_2=self.webpackChunkpush_doc_hub_v_2||[]).push([[1092],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,m=c["".concat(l,".").concat(d)]||c[d]||f[d]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4167:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={},o=void 0,s={unversionedId:"devs/chat/uiweb/MessageInput",id:"devs/chat/uiweb/MessageInput",title:"MessageInput",description:"- MessageInput",source:"@site/docs/devs/chat/uiweb/04-MessageInput.mdx",sourceDirName:"devs/chat/uiweb",slug:"/devs/chat/uiweb/MessageInput",permalink:"/devs/chat/uiweb/MessageInput",draft:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-documentation/docs/devs/chat/uiweb/04-MessageInput.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"pushChatSidebar",previous:{title:"ChatViewList",permalink:"/devs/chat/uiweb/ChatViewList"},next:{title:"ChatProfile",permalink:"/devs/chat/uiweb/ChatProfile"}},l={},u=[],p={toc:u},c="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"MessageInput"),(0,a.kt)("h3",{parentName:"li",id:"creating-functions-for-image-or-file-sharing-can-be-a-long-process-import-messageinput-pass-the-chatid-or-addressif-w2w-and-get-the-entire-functional-typebar-in-just-few-lines-of-code"},"Creating functions for image or file sharing can be a long process, import MessageInput, pass the chatId or address(if w2w) and get the entire functional typebar in just few lines of code!"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Input",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"chatId- required( recipient\u2019 address if w2w , chatId if its group chat)"),(0,a.kt)("li",{parentName:"ul"},"emoji - optional (default value true)"),(0,a.kt)("li",{parentName:"ul"},"file - optional (default value true)"),(0,a.kt)("li",{parentName:"ul"},"gif - optional (default value true)"),(0,a.kt)("li",{parentName:"ul"},"isConnected?: boolean; (default value true)"))),(0,a.kt)("li",{parentName:"ul"},"Example",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{parentName:"p",src:"https://github.com/KlausMikhaelson/KlausMikhaelson/assets/100528412/cf85455e-0a5d-4fd3-9365-6d71cce197de",alt:"Example Image"})),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import {MessageInput} from \"@pushprotocol/uiweb\";\n\nexport const MessageInputTest = () => {\n    return (\n{/* below component won't have gif, file, image option since they've been passed as false */}\n        <MessageInput chatId={'330cae5f963f2df3d6d692a7075317c906468e3fe60bfb8280a7e125208939e1'} emoji={false} gif={false} file={false} />\n    )\n}\n")))))))))}f.isMDXComponent=!0}}]);