"use strict";(self.webpackChunkpush_doc_hub_v_2=self.webpackChunkpush_doc_hub_v_2||[]).push([[6367],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>v});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=u(r),h=a,v=s["".concat(p,".").concat(h)]||s[h]||d[h]||o;return r?n.createElement(v,i(i({ref:t},l),{},{components:r})):n.createElement(v,i({ref:t},l))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[s]="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4059:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={},i=void 0,c={unversionedId:"devs/chat/uiweb/ChatUIProvider",id:"devs/chat/uiweb/ChatUIProvider",title:"ChatUIProvider",description:"ChatUIProvider",source:"@site/docs/devs/chat/uiweb/01-ChatUIProvider.mdx",sourceDirName:"devs/chat/uiweb",slug:"/devs/chat/uiweb/ChatUIProvider",permalink:"/devs/chat/uiweb/ChatUIProvider",draft:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-documentation/docs/devs/chat/uiweb/01-ChatUIProvider.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"pushChatSidebar",previous:{title:"Encryption Version in Push Chat",permalink:"/devs/chat/concepts/encryption-version-in-push-chat"},next:{title:"ChatUIProvider",permalink:"/devs/chat/uiweb/ChatUIProvider"}},p={},u=[{value:"ChatUIProvider",id:"chatuiprovider",level:2}],l={toc:u},s="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"chatuiprovider"},"ChatUIProvider"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Prop types",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Input",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-tsx"}," account?: string;\n pgpPrivagekey?: string;\n theme?: IChatTheme; \n children: React.ReactNode;\n env?: Env;\n signer?: Signer;\n"))),(0,a.kt)("li",{parentName:"ul"},"Example",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'// wrap the parent component with <ChatUIProvider>\n\nimport { ChatUIProvider } from "@pushprotocol/uiweb";\nimport { darkChatTheme } from "@pushprotocol/uiweb";\n\nexport function App({ Component }) {\n// you can pass your own signer, if you don\'t pass a signer\n// then it will automatically use the default onboarding kit i.e. blocknative \n// !pgpPrivatekey && !account && !isConnected => will give the note\n    return (\n            <ChatUIProvider theme={darkChatTheme}>\n                    <Component />\n            </ChatUIProvider>\n        )\n}\n')))))))}d.isMDXComponent=!0}}]);