"use strict";(self.webpackChunkpush_doc_hub_v_2=self.webpackChunkpush_doc_hub_v_2||[]).push([[6812],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,b=p["".concat(i,".").concat(m)]||p[m]||d[m]||s;return a?n.createElement(b,l(l({ref:t},u),{},{components:a})):n.createElement(b,l({ref:t},u))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<s;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(6010);const s={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,l),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>T});var n=a(7462),r=a(7294),s=a(6010),l=a(2466),o=a(6550),i=a(1980),c=a(7392),u=a(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function d(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:a}=e;const n=(0,o.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,s=d(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[i,c]=b({queryString:a,groupId:n}),[p,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,u.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:n}),g=(()=>{const e=i??p;return m({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),h(e)}),[c,h,s]),tabValues:s}}var g=a(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:a,selectedValue:o,selectValue:i,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,a=u.indexOf(t),n=c[a].value;n!==o&&(p(t),i(n))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},l,{className:(0,s.Z)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":o===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=h(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",f.tabList)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function T(e){const t=(0,g.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},850:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>b,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),s=a(4866),l=a(5162);const o={id:"devs-chat-quickstart",title:"Quickstart",hide_title:!1,slug:"./quickstart",displayed_sidebar:"pushChatSidebar",sidebar_position:2},i="Quickstart",c={unversionedId:"devs/chat/devs-chat-quickstart",id:"devs/chat/devs-chat-quickstart",title:"Quickstart",description:"Everything you will need to get up and running in 2 mins or less!",source:"@site/docs/devs/chat/02-Quickstart-Push-Chat.mdx",sourceDirName:"devs/chat",slug:"/devs/chat/quickstart",permalink:"/devs/chat/quickstart",draft:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-documentation/docs/devs/chat/02-Quickstart-Push-Chat.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"devs-chat-quickstart",title:"Quickstart",hide_title:!1,slug:"./quickstart",displayed_sidebar:"pushChatSidebar",sidebar_position:2},sidebar:"pushChatSidebar",previous:{title:"Intro to Push Chat",permalink:"/devs/chat/"},next:{title:"Build",permalink:"/devs/chat/build"}},u={},p=[{value:"Installation",id:"installation",level:3},{value:"Import libraries",id:"import-libraries",level:3},{value:"Initialize Chat",id:"initialize-chat",level:3},{value:"Send Message",id:"send-message",level:3},{value:"Stream / Real time updates / Socket",id:"stream--real-time-updates--socket",level:3}],d={toc:p},m="wrapper";function b(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quickstart"},"Quickstart"),(0,r.kt)("p",null,"Everything you will need to get up and running in 2 mins or less!"),(0,r.kt)("head",null,(0,r.kt)("title",null,"Quickstart | Push Chat | Push Documentation")),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)(s.Z,{className:"codetabs",groupId:"code-examples",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"js",attributes:{className:"codetab js"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Install Libraries\nnpm install @pushprotocol/restapi@latest @pushprotocol/socket@latest ethers@^5.7\n"))),(0,r.kt)(l.Z,{value:"react",attributes:{className:"codetab react"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Install Libraries\nnpm install @pushprotocol/restapi@latest @pushprotocol/socket@latest ethers@^5.7\n"))),(0,r.kt)(l.Z,{value:"reactnative",attributes:{className:"codetab reactnative"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Install Libraries\nnpm install @pushprotocol/restapi@latest @pushprotocol/socket@latest ethers@^5.7\n")))),(0,r.kt)("h3",{id:"import-libraries"},"Import libraries"),(0,r.kt)(s.Z,{className:"codetabs",groupId:"code-examples",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"js",attributes:{className:"codetab js"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Import restapi for function calls  \n// Import socket for listening for real time messages\nimport * as PushAPI from '@pushprotocol/restapi';\nimport { createSocketConnection, EVENTS } from '@pushprotocol/socket';\n\n// Ethers v5 or Viem, both are supported\nimport { ethers } from 'ethers';\n"))),(0,r.kt)(l.Z,{value:"react",attributes:{className:"codetab react"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Import restapi for function calls  \n// Import socket for listening for real time messages\nimport * as PushAPI from '@pushprotocol/restapi';\nimport { createSocketConnection, EVENTS } from '@pushprotocol/socket';\n\n// Ethers v5 or Viem, both are supported\nimport { ethers } from 'ethers';\n"))),(0,r.kt)(l.Z,{value:"reactnative",attributes:{className:"codetab reactnative"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Import restapi for function calls  \n// Import socket for listening for real time messages\nimport * as PushAPI from '@pushprotocol/restapi';\nimport { createSocketConnection, EVENTS } from '@pushprotocol/socket';\n\n// Ethers v5 or Viem, both are supported\nimport { ethers } from 'ethers';\n")))),(0,r.kt)("h3",{id:"initialize-chat"},"Initialize Chat"),(0,r.kt)(s.Z,{className:"codetabs",groupId:"code-examples",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"js",attributes:{className:"codetab js"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Creating a random signer from a wallet, ideally this is the wallet you will connect\nconst signer = ethers.Wallet.createRandom();\n\n// Initialize wallet user, pass 'prod' instead of 'staging' for mainnet apps\nconst userAlice = await PushAPI.initialize(signer, { env: 'staging' });\n"))),(0,r.kt)(l.Z,{value:"react",attributes:{className:"codetab react"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Creating a random signer from a wallet, ideally this is the wallet you will connect\nconst signer = ethers.Wallet.createRandom();\n\n// Initialize wallet user, pass 'prod' instead of 'staging' for mainnet apps\nconst userAlice = await PushAPI.initialize(signer, { env: 'staging' });\n"))),(0,r.kt)(l.Z,{value:"reactnative",attributes:{className:"codetab reactnative"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Creating a random signer from a wallet, ideally this is the wallet you will connect\nconst signer = ethers.Wallet.createRandom();\n\n// Initialize wallet user, pass 'prod' instead of 'staging' for mainnet apps\nconst userAlice = await PushAPI.initialize(signer, { env: 'staging' });\n")))),(0,r.kt)("h3",{id:"send-message"},"Send Message"),(0,r.kt)(s.Z,{className:"codetabs",groupId:"code-examples",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"js",attributes:{className:"codetab js"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  // This will be the wallet address of the recipient \n  const toWalletAddress = ethers.Wallet.createRandom().address;\n\n  // Send a message to Bob\n  const aliceMessagesBob = await userAlice.chat.send(toWalletAddress, {\n    content: 'Hello Bob!',\n    type: 'Text',\n  });\n"))),(0,r.kt)(l.Z,{value:"react",attributes:{className:"codetab react"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  // This will be the wallet address of the recipient \n  const toWalletAddress = ethers.Wallet.createRandom().address;\n\n  // Send a message to Bob\n  const aliceMessagesBob = await userAlice.chat.send(toWalletAddress, {\n    content: 'Hello Bob!',\n    type: 'Text',\n  });\n"))),(0,r.kt)(l.Z,{value:"reactnative",attributes:{className:"codetab reactnative"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  // This will be the wallet address of the recipient \n  const bobWalletAddress = ethers.Wallet.createRandom().address;\n\n  // Send a message to Bob\n  const aliceMessagesBob = await userAlice.chat.send(bobWalletAddress, {\n    content: 'Hello Bob!',\n    type: 'Text',\n  });\n")))),(0,r.kt)("h3",{id:"stream--real-time-updates--socket"},"Stream / Real time updates / Socket"),(0,r.kt)(s.Z,{className:"codetabs",groupId:"code-examples",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"js",attributes:{className:"codetab js"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Create Socket Connection\nconst pushSDKSocket = createSocketConnection({\n  user: signer.wallet,\n  socketType: 'chat',\n  socketOptions: { autoConnect: true, reconnectionAttempts: 3 },\n  env: 'staging',\n});\n\n// To listen to real time message\npushSDKSocket.on(EVENTS.CHAT_RECEIVED_MESSAGE, (message) => {\n  console.log(message);\n});\n"))),(0,r.kt)(l.Z,{value:"react",attributes:{className:"codetab react"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Create Socket Connection\nconst pushSDKSocket = createSocketConnection({\n  user: signer.wallet,\n  socketType: 'chat',\n  socketOptions: { autoConnect: true, reconnectionAttempts: 3 },\n  env: 'staging',\n});\n\n// To listen to real time message\npushSDKSocket.on(EVENTS.CHAT_RECEIVED_MESSAGE, (message) => {\n  console.log(message);\n});\n"))),(0,r.kt)(l.Z,{value:"reactnative",attributes:{className:"codetab reactnative"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Create Stream / Real time / Socket Connection\nconst pushSDKSocket = createSocketConnection({\n  user: signer.wallet,\n  socketType: 'chat',\n  socketOptions: { autoConnect: true, reconnectionAttempts: 3 },\n  env: 'staging',\n});\n\n// To listen to real time message\npushSDKSocket.on(EVENTS.CHAT_RECEIVED_MESSAGE, (message) => {\n  console.log(message);\n});\n")))))}b.isMDXComponent=!0}}]);